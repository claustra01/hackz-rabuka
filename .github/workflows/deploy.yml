name: deploy 
on: 
  push

permissions:
  contents: write
  pull-requests: write

jobs: 
  deploy: 
    runs-on: ubuntu-latest 
    steps: 
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Node setup 
        uses: actions/setup-node@v4 
        with: 
          node-version: '22'

      - name: Deploy 
        run: | 
          npm install 
          npm run build 
          npm run deploy > deploy.log 
          DEPLOY_URL=$(grep -o 'https://[a-zA-Z0-9.-]*\.pages\.dev' deploy.log) 
          echo "Deployment URL: $DEPLOY_URL" 
          if [ -n "$DEPLOY_URL" ]; then 
            if grep -q '### Deployment URL' README.md; then 
              sed -i "s|^.*https://.*pages.dev.*$|$DEPLOY_URL|" README.md 
            else 
              echo -e "\n### Deployment URL\n$DEPLOY_URL" >> README.md 
            fi 
          fi 
        env: 
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} 
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }} 

      - name: Create new branch for update
        run: |
          git checkout -b update-readme
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "[bot] update deployment URL in README" || echo "No changes to commit"
          git push origin update-readme

      - name: Create pull request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          head: update-readme
          title: "[bot] Update Deployment URL"
          body: "Automatic update of deployment URL in README file"

      - name: Merge pull request
        uses: github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: 1
            });

            if (pr.data.state === 'open') {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: 1
              });
            }